#!bin/bash
negro="\e[1;30m" && azul="\e[1;34m" && verde="\e[1;32m" && cian="\e[1;36m" && rojo="\e[1;31m" && purpura="\e[1;35m" && amarillo="\e[1;33m" && blanco="\e[1;37m"
texto(){
  case $1 in
  -ne) sn="\033[0m" && echo -e "${sn}${2}${sn}" ;;
  -azul) echo -e "${azul}${2}${sn}" ;;
  -rojo) echo -e "${rojo}${2}${sn}" ;;
  -amarillo) echo -e "${amarillo}${2}${sn}" ;;
  -purpura) echo -e "${purpura}${2}${sn}" ;;
  -verde) echo -e "${verde}${2}${sn}" ;;
  -cian) echo -e "${cian}${2}${sn}" ;;
  esac
}
linea(){
case $1 in
-gen)echo -e "${rojo}════════════════════════════════════════════════════" ;;
-del)echo -e "${rojo}━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━" ;;
-dec)echo -e "${rojo}─── ❖ ── ✦ ── ❖ ─── ❖ ── ✦ ── ❖ ─── ❖ ── ✦ ── ❖ ───" ;;
esac
}
tf(){
if [[ -z $2 ]]; then
  text="$1"
  tf="toilet -f future "
else
       $tf "$text"
fi
$tf "$text"
}
ufal_gen() {
 comando="$1"
  _=$(
    $comando >/dev/null 2>&1
  ) &
  >/dev/null
  pid=$!
  while [[ -d /proc/$pid ]]; do
    echo -ne "  \033[1;33m["
    for ((i = 0; i < 40; i++)); do
      echo -ne "\033[1;31m>"
      sleep 0.1
    done
    echo -ne "\033[1;33m]"
    sleep 1s
    echo
    tput cuu1 && tput dl1
  done
  echo -ne "  \033[1;33m[\033[1;31m>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\033[1;33m] - \033[1;32m OK \033[0m\n"
  sleep 1s
}
ufal_dep() {
    comando="$1"
    _=$(
        $comando >/dev/null 2>&1
    ) &
    >/dev/null
    pid=$!
    while [[ -d /proc/$pid ]]; do
        echo -ne "  \033[1;33m["
        for ((i = 0; i < 20; i++)); do
            echo -ne "\033[1;31m>"
            sleep 0.08
        done
        echo -ne "\033[1;33m]"
        sleep 0.5s
        echo
        tput cuu1 && tput dl1
    done
    [[ $(dpkg --get-selections | grep -w "$paquete" | head -1) ]] || ESTATUS=$(echo -e "\033[91m  FALLO DE INSTALACION") &>/dev/null
    [[ $(dpkg --get-selections | grep -w "$paquete" | head -1) ]] && ESTATUS=$(echo -e "\033[1;33m       \033[92mINSTALADO") &>/dev/null
    echo -ne "  \033[1;33m[\033[1;31m>>>>>>>>>>>>>>>>>>>>\033[1;33m] $ESTATUS \033[0m\n"
    sleep 0.5s
}
texto_cent() {
    if [[ -z $2 ]]; then
        text="$1"
    else
        col="$1"
        text="$2"
    fi

    while read line; do
        unset space
        x=$(((54 - ${#line}) / 2))
        for ((i = 0; i < $x; i++)); do
            space+=' '
        done
        space+="$line"
        if [[ -z $2 ]]; then
            msgi -azu "$space"
        else
            msgi "$col" "$space"
        fi
    done <<<$(echo -e "$text")
}
menu(){
  local options=${#@}
  local array
  for((num=1; num<=$options; num++)); do
    echo -ne "$(texto -amarillo "[\e[1;32m$num\e[1;33m]") $(texto -rojo "➤➤") "
    array=(${!num})
    case ${array[0]} in
      "-vd")echo -e "\033[1;33m[!]\033[1;32m ${array[@]:1}";;
      "-vm")echo -e "\033[1;33m[!]\033[1;31m ${array[@]:1}";;
      "-fi")echo -e "${array[@]:2} ${array[1]}";;
      -bar|-bar2|-bar3|-bar4)echo -e "\033[1;37m${array[@]:1}\n$(msg ${array[0]})";;
      *)echo -e "\033[1;37m${array[@]}";;
    esac
  done
 }
enter(){
  linea -gen
  text="►► Presione enter para continuar ◄◄"
  if [[ -z $1 ]]; then
   texto_cent "$text"
  else
    texto_cent "$1" "$text"
  fi
  read
}
back(){
    linea -gen
    echo -ne "$(texto -verde " [0]") $(texto -rojo "➤➤") " && echo -e "\033[1;41mVOLVER${sn}"
    linea -gen
}
titulo(){
echo -e "	┏━┓╺┳┓┏┳┓┏━┓╻  ╻ ╻┏━┓
	┣━┫ ┃┃┃┃┃┣━┛┃  ┃ ┃┗━┓
	╹ ╹╺┻┛╹ ╹╹  ┗━╸┗━┛┗━┛"
}
